<?php

namespace Hyperf\Seata\SqlParser\Antlr\MySql\Listener;

use Hyperf\Seata\SqlParser\Antlr\MySql\Visit\StatementSqlVisitor;
use Hyperf\Seata\SqlParser\Antlr\MySqlContext;
use Hyperf\Seata\SqlParser\Antlr\MySql\Parser\Context;

class UpdateSpecificationSqlListener extends MySqlParserBaseListener
{
    private MySqlContext $sqlQueryContext;

    public function __construct(MySqlContext $sqlQueryContext)
    {
        $this->sqlQueryContext = $sqlQueryContext;
    }

    public function enterTableName(Context\TableNameContext $context): void
    {
        parent::enterTableName($context); // TODO: Change the autogenerated stub
    }


    public function enterSingleUpdateStatement(Context\SingleUpdateStatementContext $context): void
    {
        $expressionForUpdateContext = $context->updatedElement()->expression();

        $statementSqlVisitor = new StatementSqlVisitor();

        $text = (string) $statementSqlVisitor->visit($expressionForUpdateContext);
        $this->sqlQueryContext->setWhereCondition($text);

        $uid = $context->uid();

        if ($uid != null) {
            $alias = $uid->getText();
            if (! empty($text)) {
                $this->sqlQueryContext->setTableAlias($alias);
            }
        }
        parent::enterSingleUpdateStatement($context); // TODO: Change the autogenerated stub
    }

    public function enterUpdatedElement(Context\UpdatedElementContext $context): void
    {
        $expression = $context->expression();

        $this->sqlQueryContext->addUpdateValues($expression->getText());

        $fullColumnNameContext = $context->fullColumnName();

        $this->sqlQueryContext->addUpdateColumnNames($fullColumnNameContext->getText());

        parent::enterUpdatedElement($context);
    }

}